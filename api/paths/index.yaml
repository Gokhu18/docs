  /ipfs/{hash}/:
    $ref: ./ipfs.yaml
  /ipns/{peerId}/:
    $ref: ./ipns.yaml
  /ob/opendispute:
    $ref: ./opendispute.yaml
  /ob/follow:
    post:
      tags:
        - Following
      summary: Follow a peer
      description: RPC call to follow another peer on the network.
      operationId: Follow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Follow object containing a peer ID.
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Follow'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/unfollow:
    post:
      tags:
        - Following
      summary: Unfollow a peer
      description: RPC call to unfollow another peer on the network.
      operationId: Unfollow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Unfollow object containing a peer ID.
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Follow'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/followers:
    get:
      tags:
        - Following
      summary: Get a list of your followers
      description: Returns a list of peers IDs that follow you
      operationId: GetFollowers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: offsetId
          description: Return all peer IDs after this ID
          required: false
          type: string
        - in: query
          name: limit
          description: Number of peer IDs to return
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/FollowResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/following:
    get:
      tags:
        - Following
      summary: Get a list of peers you are following.
      description: Returns a list of peer IDs you are following
      operationId: GetFollowing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: offsetId
          description: Return all peer IDs after this ID
          required: false
          type: string
        - in: query
          name: limit
          description: Number of peer IDs to return
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/FollowResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/followsme/{peerId}:
    get:
      tags:
        - Following
      summary: Does <peer> follow me?
      description: Returns true if the given peer follows you
      operationId: FollowsMe
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/FollowsMeResponse'
  /ob/isfollowing/{peerId}:
    get:
      tags:
        - Following
      summary: Am I following <peer>?
      description: Returns true if you're following the given peer
      operationId: IsFollowing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/IsFollowingResponse'
  /ob/profile:
    post:
      tags:
        - Profile
      summary: Set the profile
      description: Set the profile for this node
      operationId: PostProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Profile object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Profile'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Profile'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    put:
      tags:
        - Profile
      summary: Update the profile
      description: Update the profile for this node
      operationId: PutProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Profile object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Profile'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Profile'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ipns/{peerId}/profile:
    get:
      tags:
          - Profile
      summary: Get a profile
      description: Get a profile for a node given the peer ID.
      operationId: GetProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID. Use own peer ID to get own profile.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Profile'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/IPFSResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/IPFSResponse'
  /ob/settings:
    post:
      tags:
        - Settings
      summary: Set settings
      description: Set the settings object in the database
      operationId: PostSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Settings object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Settings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    put:
      tags:
        - Settings
      summary: Update settings
      description: Update the settings object in the database. Overwrites all fields.
      operationId: PutSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Settings object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Settings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    patch:
      tags:
        - Settings
      summary: Patch settings
      description: Update individual settings without overwriting the rest.
      operationId: PatchSettings
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Settings object with only those fields set which should be updated.
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Settings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    get:
      tags:
        - Settings
      summary: Get the settings
      description: Fetch the settings from the database
      operationId: GetSettings
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Settings'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /wallet/address:
    get:
      tags:
        - Wallet
      summary: Get a bitcoin address
      description: Returns an unused bitcoin address. Note the same address is returned until the address is used.
      operationId: GetBitcoinAddress
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Address'
  /wallet/mnemonic:
    get:
      tags:
        - Wallet
      summary: Get the mnemonic seed
      description: Returns the mnemonic seed used to derive all the bitcoin keys. Note this seed should never be disclosed as it will allow someone to drain your wallet and steal your OpenBazaar identity.
      operationId: GetMnemonic
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Mnemonic'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /wallet/balance:
    get:
      tags:
        - Wallet
      summary: Get the wallet's balance
      description: Returns the unconfirmed and confirmed balances of the wallet in satoshi (1/100000000 of a full bitcoin).
      operationId: GetBalance
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Balance'
  /wallet/spend:
    post:
      tags:
        - Wallet
      summary: Send bitcoins
      description: Send bitcoins to someone. Note the feelLevel parameter controls how much of a fee to use. By default the wallet will query a fee api to get the appropriate fee-per-byte for the given level. There is a max fee value in the config file. If the api returns more than the max, then a default fee will be used. The default values, max values, and api can be configured in the config file. If you do not wish to use a fee api, and just want to use the default value, set the fee api to "".
      operationId: SpendBitcoins
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Spend object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Spend'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /wallet/resyncblockchain:
    post:
      tags:
        - Wallet
      summary: Re-sync blockchain
      description: RPC call to re-download the blocks in the blockchain. It is theoretically possible that the wallet could fail to hear of a transaction intended for itself if its peers fail to relay a transaction. In such cases the recourse is to re-download the historical blocks from a new peer to discover the missing transaction(s).
      operationId: ResyncBlockchain
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
  /ob/peers:
    get:
      tags:
        - Peers
      summary: Get connected peers
      description: Returns a list of IDs of the peers connected to this node.
      operationId: GetPeers
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Peers'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/status/{peerId}:
    get:
      tags:
        - Peers
      summary: Get peer online status
      description: Pings the peer and returns if it is online or not
      operationId: PeerStatus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Status'
  /ob/closestpeers/{peerId}:
    get:
      tags:
        - Peers
      summary: Crawl for closest peers
      description: Crawls the DHT and returns up to 20 of the closest peers to the given ID.
      operationId: GetClosestPeers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Peers'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/avatar:
    post:
      tags:
        - Images
      summary: Set the avatar
      description: Set the avatar image. This will also update the avatar hash in the profile.
      operationId: PostAvatar
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Avatar object includes a base64 encoded image
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Avatar'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/ImageHashes'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ipns/{peerId}/images/{size}/avatar:
    get:
      tags:
        - Images
      summary: Get avatar
      description: Get the avatar image for a peer. Use own peer ID to get own avatar.
      operationId: GetAvatar
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
        - name: size
          in: path
          description: The image size to set [tiny, small, medium, large, huge]
          required: true
          type: string
      responses:
        '200':
          description: OK
  /ob/header:
    post:
      tags:
        - Images
      summary: Set the header
      description: Set the header image. This will also update the header hash in the profile.
      operationId: PostHeader
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Header object includes a base64 encoded image
          required: true
          schema:
            $ref: '../definitions/index.yaml#/ImageHashes'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ipns/{peerId}/images/{size}/header:
    get:
      tags:
        - Images
      summary: Get header
      description: Get the header image for a peer. Use own peer ID to get own header.
      operationId: GetHeader
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
        - name: size
          in: path
          description: The image size to set [tiny, small, medium, large, huge]
          required: true
          type: string
      responses:
        '200':
          description: OK
  /ob/images:
    post:
      tags:
        - Images
      summary: Upload images
      description: Upload one or more images. Returns the IPFS hash of each image which can be used to fetch the image using the IPFS API call.
      operationId: PostImage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: List of image objects which include a base64 encoded image
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Images'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/ImageResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ipns/{peerId}/images/{size}/{filename}:
    get:
      tags:
        - Images
      summary: Get image
      description: Get an image given its filename. Alternatively, you can use /ipfs/{hash}
      operationId: GetImage
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID.
          required: true
          type: string
        - name: size
          in: path
          description: The image size to set [tiny, small, medium, large, huge]
          required: true
          type: string
        - name: filename
          in: path
          description: The filename of the image to fetch
          required: true
          type: string
      responses:
        '200':
          description: OK
  /ob/moderator:
    post:
      tags:
        - Moderator
      summary: Set as moderator
      description: Make this node as a moderator and set the modertor's information.
      operationId: PostModerator
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Moderator object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Moderator'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    put:
      tags:
        - Moderator
      summary: Update moderator info
      description: Update the moderation info for this node
      operationId: PutModerator
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Moderator object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Moderator'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    delete:
      tags:
        - Moderator
      summary: Unset moderator
      description: Unset self as moderator and delete moderation info
      operationId: DeleteModerator
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ipns/{peerId}/moderation:
    get:
      tags:
          - Moderator
      summary: Get moderator info
      description: Fetch moderator info from IPFS
      operationId: GetModerator
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID. Use own peer ID to get own moderation info.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Moderator'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/IPFSResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/IPFSResponse'
  /ob/moderators:
    get:
      tags:
          - Moderator
      summary: Get a list of moderators
      description: Returns a list of moderator peer IDs. Since the server must do a network crawl to find the IDs, there are two ways make this query. The default is a simple long polling GET which returns after the crawl completes. If you want to receive the peer IDs asynchronously, add the async parameter to the request and it will return a random ID which can be used to receive the results over the websocket.
      operationId: GetModerators
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: async
          in: query
          description: Set this query parameter to true to receive the results over websockets.
          required: true
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/ModeratorList'
        '202':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/AsyncId'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/IPFSResponse'
  /ob/inventory:
    post:
      tags:
        - Inventory
      summary: Set inventory levels
      description: Set the inventory for a given item. The item format must be /slug/variant/...
      operationId: PostInventory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Inventory object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Inventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    get:
      tags:
        - Inventory
      summary: Get all inventory
      description: Get a list of all inventory counts
      operationId: GetInventory
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/InventoryList'
  /ob/config:
    get:
      tags:
       - Misc
      summary: Get node configuration
      description: Returns the node's own peer ID and the type of cryptocurrency used.
      operationId: GetConfig
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/Config'
  /ob/exchangerate/{currencyCode}:
    get:
      tags:
        - Misc
      summary: Get exchange rates
      description: Returns either the exchange rate (per BTC) for the given fiat currency or all rates.
      operationId: Get
      consumes:
        - application/json
      produces:
        - text/plain
      parameters:
        - name: currencyCode
          in: path
          description: The fiat currency code. This field may be omitted if you want to receive all exchange rates.
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/ExchangeRate'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/listing:
    post:
      tags:
        - Listings
      summary: Create a new listing
      description: Create a new listing and set its inventory
      operationId: PostListing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Listing request object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/ListingPost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/SlugResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    put:
      tags:
        - Listings
      summary: Update a listing
      description: Update a listing. The currentSlug field is used specify the listing being updated. If the listing contains a new slug, the listing will be renamed using the new slug.
      operationId: PutListing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Listing request object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/ListingPut'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
    delete:
      tags:
        - Listings
      summary: Delete a listing
      description: Delete a listing and associated inventory
      operationId: DeleteListing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Current slug object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/ListingDelete'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/listing/{id}:
    get:
      tags:
        - Listings
      summary: Get own listing
      description: Returns this node's own listing with the inventory attached to the return.
      operationId: GetOwnListing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: A slug or listing hash
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/ListingGet'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ipns/{peerId}/listings/{slug}:
    get:
      tags:
        - Listings
      summary: Get a listing
      description: This returns a listing wrapped in a Ricardian Contract which contains the signatures needed to validate the listing. Alternativley, you can fetch a listing using `/ipfs/{listing_hash}`
      operationId: GetListing
      parameters:
        - name: peerId
          in: path
          description: The base58 encoded peer ID. Use your own ID to fetch your own listings.
          required: true
          type: string
        - name: slug
          in: path
          description: The listing slug
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/RawListingGet'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/IPFSResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/IPFSResponse'
  /ob/purchase:
    post:
      tags:
        - Orders
      summary: Purchase an item
      description: Send a purchase message to a vendor for one or more items
      operationId: PostPurchase
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Purchase object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/PurchaseData'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/PurchaseResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/orderconfirmation:
    post:
      tags:
        - Orders
      summary: Confirm an offline order
      description: Online orders are confirmed instantly. This API call is to confirm an order sent to the vendor while he was offline.
      operationId: PostOrderConfirmation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order confirmation object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/OrderConfirmation'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/orderfulfillment:
    post:
      tags:
        - Orders
      summary: Fulfill an order
      description: Send an order fulfillment message to the buyer. Typically used to tell the buyer an item has been shipped.
      operationId: PostOrderFulfillment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order fulfillment object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/OrderFulfillment'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/ordercompletion:
    post:
      tags:
        - Orders
      summary: Complete an order
      description: Send the order complete message (including the rating) to the vendor. If this is a moderated order, it will sign and release the funds to the vendor.
      operationId: PostOrderCompletion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order completion object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/OrderCompletion'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/ordercancel:
    post:
      tags:
        - Orders
      summary: Cancel an offline order
      description: Cancel an outstanding offline order. It will move the bitcoins back into your wallet.
      operationId: PostCancelConfirmation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Order cancel object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/OrderCancel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/refund:
    post:
      tags:
        - Orders
      summary: Refund an order
      description: Refund the order. If it's a moderated order, it will release the funds back to the buyer. If it's direct it will send the coins from your wallet.
      operationId: PostRefund
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Refund object
          required: true
          schema:
            $ref: '../definitions/index.yaml#/Refund'
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/DefaultResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
  /ob/order/{orderId}:
    post:
      tags:
        - Orders
      summary: Get an order
      description: Get an order by ID
      operationId: GetOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: The base58 encoded order ID. Can be a sale or purchase.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '../definitions/index.yaml#/OrderResponse'
        '404':
          description: Not Found
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '../definitions/index.yaml#/ErrorResponse'
